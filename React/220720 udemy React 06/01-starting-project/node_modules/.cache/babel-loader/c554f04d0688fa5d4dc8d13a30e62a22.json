{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      console.log(action);\n      state.counter = state.counter + action.payload.add;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  // reducer: counterSlice.reducer\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","console","log","payload","add","toggleCounter","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["C:/Users/multicampus/Desktop/SEHO/TIL/React/220720 udemy React 06/01-starting-project/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit'\r\n\r\nconst initialCounterState = {counter : 0, showCounter : true,}\r\n\r\nconst counterSlice = createSlice({\r\n  name : 'counter',\r\n  initialState : initialCounterState,\r\n  reducers : {\r\n    increment(state) {\r\n      state.counter ++\r\n    },\r\n    decrement(state) {\r\n      state.counter --\r\n    },\r\n    increase(state, action) {\r\n      console.log(action)\r\n      state.counter = state.counter + action.payload.add\r\n    },\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter\r\n    },\r\n  }\r\n})\r\nconst initialAuthState = {\r\n  isAuthenticated : false,\r\n}\r\n\r\nconst authSlice = createSlice({\r\n  name:\"authentication\",\r\n  initialState: initialAuthState,\r\n  reducers :{\r\n    login(state) {\r\n      state.isAuthenticated = true\r\n    },\r\n    logout(state) {\r\n      state.isAuthenticated = false\r\n    },\r\n  }\r\n})\r\n\r\nconst store = configureStore({\r\n  // reducer: counterSlice.reducer\r\n  reducer: { counter : counterSlice.reducer, auth : authSlice.reducer }\r\n})\r\n\r\nexport const counterActions = counterSlice.actions\r\nexport const authActions = authSlice.actions\r\n\r\nexport default store\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;EAACC,OAAO,EAAG,CAAX;EAAcC,WAAW,EAAG;AAA5B,CAA5B;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAG,SADwB;EAE/BC,YAAY,EAAGL,mBAFgB;EAG/BM,QAAQ,EAAG;IACTC,SAAS,CAACC,KAAD,EAAQ;MACfA,KAAK,CAACP,OAAN;IACD,CAHQ;;IAITQ,SAAS,CAACD,KAAD,EAAQ;MACfA,KAAK,CAACP,OAAN;IACD,CANQ;;IAOTS,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;MACtBC,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACAH,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACG,OAAP,CAAeC,GAA/C;IACD,CAVQ;;IAWTC,aAAa,CAACR,KAAD,EAAQ;MACnBA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;IACD;;EAbQ;AAHoB,CAAD,CAAhC;AAmBA,MAAMe,gBAAgB,GAAG;EACvBC,eAAe,EAAG;AADK,CAAzB;AAIA,MAAMC,SAAS,GAAGrB,WAAW,CAAC;EAC5BM,IAAI,EAAC,gBADuB;EAE5BC,YAAY,EAAEY,gBAFc;EAG5BX,QAAQ,EAAE;IACRc,KAAK,CAACZ,KAAD,EAAQ;MACXA,KAAK,CAACU,eAAN,GAAwB,IAAxB;IACD,CAHO;;IAIRG,MAAM,CAACb,KAAD,EAAQ;MACZA,KAAK,CAACU,eAAN,GAAwB,KAAxB;IACD;;EANO;AAHkB,CAAD,CAA7B;AAaA,MAAMI,KAAK,GAAGvB,cAAc,CAAC;EAC3B;EACAwB,OAAO,EAAE;IAAEtB,OAAO,EAAGE,YAAY,CAACoB,OAAzB;IAAkCC,IAAI,EAAGL,SAAS,CAACI;EAAnD;AAFkB,CAAD,CAA5B;AAKA,OAAO,MAAME,cAAc,GAAGtB,YAAY,CAACuB,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAA9B;AAEP,eAAeJ,KAAf"},"metadata":{},"sourceType":"module"}